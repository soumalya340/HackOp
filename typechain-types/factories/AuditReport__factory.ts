/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AuditReport, AuditReportInterface } from "../AuditReport";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_thresoldPoint",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "projecttId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "contributor",
        type: "address",
      },
    ],
    name: "NFTMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "prizePool",
        type: "uint256",
      },
    ],
    name: "ProjectRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reportId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reportURI",
        type: "string",
      },
    ],
    name: "ReportSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reportId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "ReportVerified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "leaderboard",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "projects",
    outputs: [
      {
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "projectURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "prizePool",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prizePool",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
    ],
    name: "registerProject",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "reports",
    outputs: [
      {
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        internalType: "string",
        name: "reportURI",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isVerified",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "point",
        type: "uint256",
      },
    ],
    name: "setThresoldPoints",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reportURI",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "submitReport",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "thresoldPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reportId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "verifyReport",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620026ce380380620026ce83398101604081905262000034916200007c565b81620000408162000054565b5060016004556007555033608052620002b2565b6002620000628282620001e6565b5050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200009057600080fd5b82516001600160401b0380821115620000a857600080fd5b818501915085601f830112620000bd57600080fd5b815181811115620000d257620000d262000066565b604051601f8201601f19908116603f01168101908382118183101715620000fd57620000fd62000066565b816040528281526020935088848487010111156200011a57600080fd5b600091505b828210156200013e57848201840151818301850152908301906200011f565b6000928101840192909252509401519395939450505050565b600181811c908216806200016c57607f821691505b6020821081036200018d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001e157600081815260208120601f850160051c81016020861015620001bc5750805b601f850160051c820191505b81811015620001dd57828155600101620001c8565b5050505b505050565b81516001600160401b0381111562000202576200020262000066565b6200021a8162000213845462000157565b8462000193565b602080601f831160018114620002525760008415620002395750858301515b600019600386901b1c1916600185901b178555620001dd565b600085815260208120601f198616915b82811015620002835788860151825594840194600190910190840162000262565b5085821015620002a25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6080516123f9620002d56000396000818161029d015261047701526123f96000f3fe6080604052600436106101125760003560e01c80638da5cb5b116100a0578063cf4d832c11610064578063cf4d832c14610374578063d1d33d2014610387578063df68816a146103b4578063e985e9c5146103d4578063f242432a1461041d57600080fd5b80638da5cb5b1461028b578063a22cb465146102d7578063b5cfff01146102f7578063bd85b03914610317578063c942adf71461034457600080fd5b80630e89341c116100e75780630e89341c146101b2578063107046bd146101df5780632eb2c2d61461020f5780634e1273f41461022f5780634f558e791461025c57600080fd5b8062f53a5214610117578062fdd58e1461013957806301ffc9a71461016c5780630775582b1461019c575b600080fd5b34801561012357600080fd5b50610137610132366004611881565b61043d565b005b34801561014557600080fd5b506101596101543660046118bf565b6106a2565b6040519081526020015b60405180910390f35b34801561017857600080fd5b5061018c610187366004611902565b610736565b6040519015158152602001610163565b3480156101a857600080fd5b5061015960075481565b3480156101be57600080fd5b506101d26101cd366004611926565b610741565b6040516101639190611985565b3480156101eb57600080fd5b506101ff6101fa366004611926565b6107e6565b6040516101639493929190611998565b34801561021b57600080fd5b5061013761022a366004611b2a565b6108a5565b34801561023b57600080fd5b5061024f61024a366004611bd4565b6108f1565b6040516101639190611cda565b34801561026857600080fd5b5061018c610277366004611926565b600090815260036020526040902054151590565b34801561029757600080fd5b506102bf7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610163565b3480156102e357600080fd5b506101376102f2366004611ced565b610a1b565b34801561030357600080fd5b50610137610312366004611926565b600755565b34801561032357600080fd5b50610159610332366004611926565b60009081526003602052604090205490565b34801561035057600080fd5b5061036461035f366004611926565b610a26565b6040516101639493929190611d29565b610137610382366004611d66565b610ae4565b34801561039357600080fd5b506101596103a2366004611db7565b600a6020526000908152604090205481565b3480156103c057600080fd5b506101376103cf366004611dd2565b610c26565b3480156103e057600080fd5b5061018c6103ef366004611e73565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b34801561042957600080fd5b50610137610438366004611ea6565b610df6565b610445610e3b565b600082815260096020908152604080832080548085526008909352922080546001600160a01b03163314806104a257507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633145b6104ff5760405162461bcd60e51b815260206004820152602360248201527f41756469745265706f72743a2055736572206973206e6f7420617574686f72696044820152621e995960ea1b60648201526084015b60405180910390fd5b600383015460ff16156105605760405162461bcd60e51b8152602060048201526024808201527f41756469745265706f72743a205265706f727420616c72656164792076657269604482015263199a595960e21b60648201526084016104f6565b83816002015410156105be5760405162461bcd60e51b815260206004820152602160248201527f41756469745265706f72743a204e6f7420656e6f75676820746f2072657761726044820152601960fa1b60648201526084016104f6565b60038301805460ff191660011790556002810180548591906000906105e4908490611f21565b909155505060018301546040516001600160a01b039091169085156108fc029086906000818181858888f19350505050158015610625573d6000803e3d6000fd5b506001838101546001600160a01b03166000908152600a602052604081208054909190610653908490611f34565b909155505060408051868152602081018690527f130f06ea4bb68350104c9996743c5be0c63ee5bf520b37cb8fb5ecbcc502e92a910160405180910390a150505061069e6001600455565b5050565b60006001600160a01b03831661070d5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084016104f6565b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b600061073082610e94565b600081815260086020526040902060010180546060919061076190611f47565b80601f016020809104026020016040519081016040528092919081815260200182805461078d90611f47565b80156107da5780601f106107af576101008083540402835291602001916107da565b820191906000526020600020905b8154815290600101906020018083116107bd57829003601f168201915b50505050509050919050565b600860205260009081526040902080546001820180546001600160a01b03909216929161081290611f47565b80601f016020809104026020016040519081016040528092919081815260200182805461083e90611f47565b801561088b5780601f106108605761010080835404028352916020019161088b565b820191906000526020600020905b81548152906001019060200180831161086e57829003601f168201915b50505050600283015460039093015491929160ff16905084565b6001600160a01b0385163314806108c157506108c185336103ef565b6108dd5760405162461bcd60e51b81526004016104f690611f81565b6108ea8585858585610ee4565b5050505050565b606081518351146109565760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016104f6565b6000835167ffffffffffffffff811115610972576109726119d4565b60405190808252806020026020018201604052801561099b578160200160208202803683370190505b50905060005b8451811015610a13576109e68582815181106109bf576109bf611fcf565b60200260200101518583815181106109d9576109d9611fcf565b60200260200101516106a2565b8282815181106109f8576109f8611fcf565b6020908102919091010152610a0c81611fe5565b90506109a1565b509392505050565b61069e3383836110cf565b60096020526000908152604090208054600182015460028301805492936001600160a01b0390921692610a5890611f47565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8490611f47565b8015610ad15780601f10610aa657610100808354040283529160200191610ad1565b820191906000526020600020905b815481529060010190602001808311610ab457829003601f168201915b5050506003909301549192505060ff1684565b34821115610b345760405162461bcd60e51b815260206004820152601e60248201527f41756469745265706f72743a204e6f7420656e6f7567682066756e647321000060448201526064016104f6565b60058054906000610b4483611fe5565b9091555050600554604080516080810190915280336001600160a01b039081168252602080830186905260408084018890526001606090940184905260008681526008835220845181546001600160a01b03191693169290921782558301519091820190610bb29082612049565b50604082015160028201556060909101516003909101805460ff19169115159190911790557f7e4e91e010044dfa581ae4b94c71f5c1df80a59df0a6cd391e5821145e0bde128133604080519283526001600160a01b039091166020830152810185905260600160405180910390a1505050565b60068054906000610c3683611fe5565b909155505060065460008581526008602052604090206003015460ff16610c9f5760405162461bcd60e51b815260206004820152601f60248201527f41756469745265706f72743a2050726f6a656374206e6f74206163746976650060448201526064016104f6565b610cac33866001856111af565b6040518060800160405280868152602001610cc43390565b6001600160a01b0316815260200185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093855250505060209182018190528381526009825260409081902083518155918301516001830180546001600160a01b0319166001600160a01b039092169190911790558201516002820190610d5a9082612049565b50606091909101516003909101805460ff19169115159190911790557fd8d70bbc43d95fae4322943d483f06e8fcc2353f5c151a45fe7e6b4cab35400b8186338787604051610dad959493929190612109565b60405180910390a16040805186815233602082015281517f0176f203df400d7bd5f1b1c9ef36c16709bf3b5d9fd35f000a6bae32393f66c3929181900390910190a15050505050565b6001600160a01b038516331480610e125750610e1285336103ef565b610e2e5760405162461bcd60e51b81526004016104f690611f81565b6108ea85858585856112d2565b600260045403610e8d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104f6565b6002600455565b60006001600160e01b03198216636cdb3d1360e11b1480610ec557506001600160e01b031982166303a24d0760e21b145b8061073057506301ffc9a760e01b6001600160e01b0319831614610730565b8151835114610f465760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016104f6565b6001600160a01b038416610f6c5760405162461bcd60e51b81526004016104f690612158565b33610f7b81878787878761140a565b60005b8451811015611061576000858281518110610f9b57610f9b611fcf565b602002602001015190506000858381518110610fb957610fb9611fcf565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156110095760405162461bcd60e51b81526004016104f69061219d565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290611046908490611f34565b925050819055505050508061105a90611fe5565b9050610f7e565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516110b19291906121e7565b60405180910390a46110c78187878787876114a7565b505050505050565b816001600160a01b0316836001600160a01b0316036111425760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016104f6565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b03841661120f5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016104f6565b33600061121b85611602565b9050600061122885611602565b90506112398360008985858961140a565b6000868152602081815260408083206001600160a01b038b16845290915281208054879290611269908490611f34565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46112c98360008989898961164d565b50505050505050565b6001600160a01b0384166112f85760405162461bcd60e51b81526004016104f690612158565b33600061130485611602565b9050600061131185611602565b905061132183898985858961140a565b6000868152602081815260408083206001600160a01b038c168452909152902054858110156113625760405162461bcd60e51b81526004016104f69061219d565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a1682528120805488929061139f908490611f34565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46113ff848a8a8a8a8a61164d565b505050505050505050565b6001600160a01b038516158061142757506001600160a01b038416155b6114995760405162461bcd60e51b815260206004820152603760248201527f41756469745265706f7274203a2041737365742063616e6e6f7420626520747260448201527f616e73666572726564206f722064657374726f7965642100000000000000000060648201526084016104f6565b6110c7868686868686611708565b6001600160a01b0384163b156110c75760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906114eb9089908990889088908890600401612215565b6020604051808303816000875af1925050508015611526575060408051601f3d908101601f1916820190925261152391810190612273565b60015b6115d257611532612290565b806308c379a00361156b57506115466122ac565b80611551575061156d565b8060405162461bcd60e51b81526004016104f69190611985565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016104f6565b6001600160e01b0319811663bc197c8160e01b146112c95760405162461bcd60e51b81526004016104f690612336565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061163c5761163c611fcf565b602090810291909101015292915050565b6001600160a01b0384163b156110c75760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611691908990899088908890889060040161237e565b6020604051808303816000875af19250505080156116cc575060408051601f3d908101601f191682019092526116c991810190612273565b60015b6116d857611532612290565b6001600160e01b0319811663f23a6e6160e01b146112c95760405162461bcd60e51b81526004016104f690612336565b6001600160a01b03851661178f5760005b835181101561178d5782818151811061173457611734611fcf565b60200260200101516003600086848151811061175257611752611fcf565b6020026020010151815260200190815260200160002060008282546117779190611f34565b90915550611786905081611fe5565b9050611719565b505b6001600160a01b0384166110c75760005b83518110156112c95760008482815181106117bd576117bd611fcf565b6020026020010151905060008483815181106117db576117db611fcf565b602002602001015190506000600360008481526020019081526020016000205490508181101561185e5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f74604482015267616c537570706c7960c01b60648201526084016104f6565b6000928352600360205260409092209103905561187a81611fe5565b90506117a0565b6000806040838503121561189457600080fd5b50508035926020909101359150565b80356001600160a01b03811681146118ba57600080fd5b919050565b600080604083850312156118d257600080fd5b6118db836118a3565b946020939093013593505050565b6001600160e01b0319811681146118ff57600080fd5b50565b60006020828403121561191457600080fd5b813561191f816118e9565b9392505050565b60006020828403121561193857600080fd5b5035919050565b6000815180845260005b8181101561196557602081850181015186830182015201611949565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061191f602083018461193f565b6001600160a01b03851681526080602082018190526000906119bc9083018661193f565b60408301949094525090151560609091015292915050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611a1057611a106119d4565b6040525050565b600067ffffffffffffffff821115611a3157611a316119d4565b5060051b60200190565b600082601f830112611a4c57600080fd5b81356020611a5982611a17565b604051611a6682826119ea565b83815260059390931b8501820192828101915086841115611a8657600080fd5b8286015b84811015611aa15780358352918301918301611a8a565b509695505050505050565b600067ffffffffffffffff831115611ac657611ac66119d4565b604051611add601f8501601f1916602001826119ea565b809150838152848484011115611af257600080fd5b83836020830137600060208583010152509392505050565b600082601f830112611b1b57600080fd5b61191f83833560208501611aac565b600080600080600060a08688031215611b4257600080fd5b611b4b866118a3565b9450611b59602087016118a3565b9350604086013567ffffffffffffffff80821115611b7657600080fd5b611b8289838a01611a3b565b94506060880135915080821115611b9857600080fd5b611ba489838a01611a3b565b93506080880135915080821115611bba57600080fd5b50611bc788828901611b0a565b9150509295509295909350565b60008060408385031215611be757600080fd5b823567ffffffffffffffff80821115611bff57600080fd5b818501915085601f830112611c1357600080fd5b81356020611c2082611a17565b604051611c2d82826119ea565b83815260059390931b8501820192828101915089841115611c4d57600080fd5b948201945b83861015611c7257611c63866118a3565b82529482019490820190611c52565b96505086013592505080821115611c8857600080fd5b50611c9585828601611a3b565b9150509250929050565b600081518084526020808501945080840160005b83811015611ccf57815187529582019590820190600101611cb3565b509495945050505050565b60208152600061191f6020830184611c9f565b60008060408385031215611d0057600080fd5b611d09836118a3565b915060208301358015158114611d1e57600080fd5b809150509250929050565b8481526001600160a01b0384166020820152608060408201819052600090611d539083018561193f565b9050821515606083015295945050505050565b60008060408385031215611d7957600080fd5b82359150602083013567ffffffffffffffff811115611d9757600080fd5b8301601f81018513611da857600080fd5b611c9585823560208401611aac565b600060208284031215611dc957600080fd5b61191f826118a3565b60008060008060608587031215611de857600080fd5b84359350602085013567ffffffffffffffff80821115611e0757600080fd5b818701915087601f830112611e1b57600080fd5b813581811115611e2a57600080fd5b886020828501011115611e3c57600080fd5b602083019550809450506040870135915080821115611e5a57600080fd5b50611e6787828801611b0a565b91505092959194509250565b60008060408385031215611e8657600080fd5b611e8f836118a3565b9150611e9d602084016118a3565b90509250929050565b600080600080600060a08688031215611ebe57600080fd5b611ec7866118a3565b9450611ed5602087016118a3565b93506040860135925060608601359150608086013567ffffffffffffffff811115611eff57600080fd5b611bc788828901611b0a565b634e487b7160e01b600052601160045260246000fd5b8181038181111561073057610730611f0b565b8082018082111561073057610730611f0b565b600181811c90821680611f5b57607f821691505b602082108103611f7b57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600060018201611ff757611ff7611f0b565b5060010190565b601f82111561204457600081815260208120601f850160051c810160208610156120255750805b601f850160051c820191505b818110156110c757828155600101612031565b505050565b815167ffffffffffffffff811115612063576120636119d4565b612077816120718454611f47565b84611ffe565b602080601f8311600181146120ac57600084156120945750858301515b600019600386901b1c1916600185901b1785556110c7565b600085815260208120601f198616915b828110156120db578886015182559484019460019091019084016120bc565b50858210156120f95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b858152602081018590526001600160a01b03841660408201526080606082018190528101829052818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6040815260006121fa6040830185611c9f565b828103602084015261220c8185611c9f565b95945050505050565b6001600160a01b0386811682528516602082015260a06040820181905260009061224190830186611c9f565b82810360608401526122538186611c9f565b90508281036080840152612267818561193f565b98975050505050505050565b60006020828403121561228557600080fd5b815161191f816118e9565b600060033d11156122a95760046000803e5060005160e01c5b90565b600060443d10156122ba5790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156122ea57505050505090565b82850191508151818111156123025750505050505090565b843d870101602082850101111561231c5750505050505090565b61232b602082860101876119ea565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906123b89083018461193f565b97965050505050505056fea2646970667358221220d3a8692b9fa44436097a59c65c79a8cc56b6b9389d2537f4097d2e157b6c19d364736f6c63430008140033";

type AuditReportConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AuditReportConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AuditReport__factory extends ContractFactory {
  constructor(...args: AuditReportConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AuditReport";
  }

  deploy(
    baseURI: string,
    _thresoldPoint: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AuditReport> {
    return super.deploy(
      baseURI,
      _thresoldPoint,
      overrides || {}
    ) as Promise<AuditReport>;
  }
  getDeployTransaction(
    baseURI: string,
    _thresoldPoint: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(baseURI, _thresoldPoint, overrides || {});
  }
  attach(address: string): AuditReport {
    return super.attach(address) as AuditReport;
  }
  connect(signer: Signer): AuditReport__factory {
    return super.connect(signer) as AuditReport__factory;
  }
  static readonly contractName: "AuditReport";
  public readonly contractName: "AuditReport";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AuditReportInterface {
    return new utils.Interface(_abi) as AuditReportInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AuditReport {
    return new Contract(address, _abi, signerOrProvider) as AuditReport;
  }
}
